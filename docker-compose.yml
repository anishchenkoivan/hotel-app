version: "3.9"
services:
  booking-postgres:
    image: postgres:latest
    container_name: booking-postgres
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - backend
    volumes:
      - booking_service_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"

  hotel-postgres:
    image: postgres:latest
    container_name: hotel-postgres
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - backend
    volumes:
      - hotel_service_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  booking-service:
    build: booking-service/
    container_name: booking-service
    depends_on:
      - booking-postgres
    environment:
      BOOKING_SERVICE_SERVER_PORT: 8080
      BOOKING_SERVICE_SERVER_HOST: 0.0.0.0
      BOOKING_SERVICE_DB_HOST: booking-postgres
      BOOKING_SERVICE_DB_PORT: 5432
      BOOKING_SERVICE_DB_NAME: postgres
      BOOKING_SERVICE_DB_USER: postgres
      BOOKING_SERVICE_DB_PASSWORD: postgres
      BOOKING_SERVICE_DB_MIGRATIONS: migrations/migrations.sql
      BOOKING_SERVICE_GRPC_HOST: booking-service
      BOOKING_SERVICE_GRPC_PORT: 50051
      BOOKING_SERVICE_APP_SHUTDOWN_TIMEOUT: 5s
      HOTEL_SERVICE_GRPC_HOST: hotel-service
      HOTEL_SERVICE_GRPC_PORT: 50051
      PAYMENT_SYSTEM_GRPC_HOST: payment-system
      PAYMENT_SYSTEM_GRPC_PORT: 50051

      KAFKA_PRODUCE_TOPIC: default
      KAFKA_BROKER_HOST: kafka
      KAFKA_BROKER_PORT: 9092
      KAFKA_CONSUMER_GROUP_ID: group
    networks:
      - backend
    ports:
      - "8080:8080"

  hotel-service:
    build: hotel-service/
    container_name: hotel-service
    depends_on:
      - hotel-postgres
    environment:
      HOTEL_SERVICE_SERVER_PORT: 8081
      HOTEL_SERVICE_SERVER_HOST: 0.0.0.0
      HOTEL_SERVICE_SERVER_GRPC_PORT: 50051
      HOTEL_SERVICE_SERVER_GRPC_HOST: hotel-service
      HOTEL_SERVICE_DB_HOST: hotel-postgres
      HOTEL_SERVICE_DB_PORT: 5432
      HOTEL_SERVICE_DB_NAME: postgres
      HOTEL_SERVICE_DB_USER: postgres
      HOTEL_SERVICE_DB_PASSWORD: postgres
      HOTEL_SERVICE_DB_MIGRATIONS_PATH: migrations/migrations.sql
      HOTEL_SERVICE_APP_SHUTDOWN_TIMEOUT: 5s
    networks:
      - backend
    ports:
      - "8081:8081"

  payment-system:
    build: payment-system/
    container_name: payment-system
    environment:
      PAYMENT_SYSTEM_PORT: 8082
      PAYMENT_SYSTEM_HOST: 0.0.0.0
      PAYMENT_SYSTEM_GRPC_PORT: 50051
      PAYMENT_SYSTEM_GRPC_HOST: payment-system
      PAYMENT_SYSTEM_APP_SHUTDOWN_TIMEOUT: 5s
      PAYMENT_SYSTEM_PAYMENT_TIMEOUT: 60s
      BOOKING_SERVICE_PORT: 50051
      BOOKING_SERVICE_HOST: booking-service
    networks:
      - backend
    ports:
      - "8082:8082"

  notification-service:
    build: notification-service/
    container_name: notification-service
    depends_on:
      - kafka
    environment:
      KAFKA_CONSUME_TOPIC: default
      KAFKA_BROKER_HOST: kafka
      KAFKA_BROKER_PORT: 9092
      KAFKA_CONSUMER_GROUP_ID: group
      NOTIFICATION_SERVICE_SHUTDOWN_TIMEOUT: 5s
    networks:
      - backend

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - backend

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
      - '9093:9093'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_CREATE_TOPICS: "default:1:1"
    networks:
      - backend

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKER_CONNECT: kafka:9092
    depends_on:
      - kafka
    networks:
      - backend


volumes:
  booking_service_data:
  hotel_service_data:

networks:
  backend:
